// Generated by CoffeeScript 1.6.2
(function() {
  var app, client, client_settings, express, http, mosca_host, mosca_port, mqtt, myMiddleware, routes, server;

  mqtt = require('mqtt');

  mosca_host = 'localhost';

  mosca_port = '1883';

  client_settings = {
    keepalive: 1000,
    protocolId: 'MQIsdp',
    protocolVersion: 3,
    clientId: 'client-2'
  };

  express = require('express');

  routes = require('./routes');

  http = require('http');

  app = express();

  client = mqtt.createClient(mosca_port, mosca_host, client_settings);

  myMiddleware = function(req, res, next) {
    if (req.method === 'GET') {
      console.log("hi , I am here");
    }
    return next();
  };

  app.configure(function() {
    app.set('port', process.env.PORT || 3000);
    app.set('views', __dirname + '/views');
    app.set('view engine', 'ejs');
    app.use(express.favicon());
    app.use(express.logger('dev'));
    app.use(express.bodyParser({
      uploadDir: "./"
    }));
    app.use(express.methodOverride());
    app.use(app.router);
    app.use(myMiddleware);
    return app.use(express["static"](__dirname + '/public'));
  });

  app.get('/', routes.index);

  app.get('/y/:nb', function(req, res) {
    var nb;

    nb = req.params.nb;
    console.log(nb);
    client.publish('laser/cat', "axey:" + nb);
    return res.send('ok');
  });

  app.get('/x/:nb', function(req, res) {
    var nb;

    nb = req.params.nb;
    console.log(nb);
    client.publish('laser/cat', "axex:" + nb);
    return res.send('ok');
  });

  app.get('/laser/:nb', function(req, res) {
    var nb;

    nb = req.params.nb;
    console.log(nb);
    client.publish('laser/cat', "laser:" + nb);
    return res.send('ok');
  });

  server = http.createServer(app);

  server.listen(app.get('port'), function() {
    return console.log("Express server listening on port " + app.get('port'));
  });

}).call(this);
